name: Deploy to development

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: eu-west-2
  ECR_URL: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-frontend-production
  ENVIRONMENT: development
  IAM_ROLE_ARN: arn:aws:iam::844815912454:role/GithubActions-ECS-Deployments-Role

jobs:
  build:
    if: contains(github.event.pull_request.labels.*.name, 'needs-deployment') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - id: ruby-version
        run: echo "RUBY_VERSION=$(cat .ruby-version)" >> "$GITHUB_OUTPUT"

      - uses: trade-tariff/trade-tariff-tools/.github/actions/terraform-plan@main
        with:
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}

      - uses: trade-tariff/trade-tariff-tools/.github/actions/build-and-push@main
        with:
          ecr-url: ${{ env.ECR_URL }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          build-args: "RUBY_VERSION=${{ steps.ruby-version.outputs.RUBY_VERSION }} ALPINE_VERSION=3.21"

  deploy:
    if: contains(github.event.pull_request.labels.*.name, 'needs-deployment') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4

      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - uses: trade-tariff/trade-tariff-tools/.github/actions/terraform-apply@main
        with:
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}

  post-deploy:
    if: contains(github.event.pull_request.labels.*.name, 'needs-deployment') || github.event_name == 'workflow_dispatch'
    needs: deploy
    uses: trade-tariff/trade-tariff-tools/.github/workflows/e2e-tests.yml@main
    with:
      test-url: "https://dev.trade-tariff.service.gov.uk"
      admin-test-url: "https://admin.dev.trade-tariff.service.gov.uk"
    secrets:
      basic_password: ${{ secrets.BASIC_PASSWORD }}

  accessibility:
    if: contains(github.event.pull_request.labels.*.name, 'needs-deployment') || github.event_name == 'workflow_dispatch'
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn playwright install --with-deps chromium
      - run: yarn run axxy
        env:
          BASE_URL: https://dev.trade-tariff.service.gov.uk
          BASIC_PASSWORD: ${{ secrets.BASIC_PASSWORD }}
          CI: true
      - run: |
          yarn run gh-pages \
            --dist dist \
            --user "trade-tariff-infrastructure-continuity<hmrc-trade-tariff-support-g@digital.hmrc.gov.uk>" \
            --silent \
            --nojekyll
      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "non-production-alerts"
          SLACK_USERNAME: "Accessibility Report"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON_EMOJI: ":alphabet-yellow-s:"
          SLACK_COLOR: success
          SLACK_TITLE: New Accessibility report generated
          SLACK_MESSAGE: https://trade-tariff.github.io/trade-tariff-frontend/accessibility-report.html

  notifications:
    if: contains(github.event.pull_request.labels.*.name, 'needs-deployment') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: post-deploy
    steps:
      - uses: actions/checkout@v4
      - uses: trade-tariff/trade-tariff-tools/.github/actions/slack-notify@main
        with:
          result: ${{ needs.post-deploy.result }}
          slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
