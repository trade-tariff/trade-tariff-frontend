name: Preview App Up
on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

permissions:
  contents: read
  pull-requests: write
  id-token: write

env:
  AWS_REGION: eu-west-2
  IAM_ROLE_ARN: arn:aws:iam::844815912454:role/GithubActions-Preview-App-Role
  PREEVY_PROFILE_URL: s3://preevy-profile-store?region=eu-west-2
  SECRET_NAME: frontend-configuration

# allow a single job to run per PR
concurrency: preevy-${{ github.event.number }}

jobs:
  deploy:
    if: contains(github.event.pull_request.labels.*.name, 'needs-preview') || contains(github.event.pull_request.labels.*.name, 'keep-preview')
    runs-on: ubuntu-latest
    outputs:
      preview_url: ${{ steps.get-url.outputs.preview_url }}

    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/checkout@v5

      - name: Fetch frontend-configuration secrets and mask values
        run: |
          set -euo pipefail

          SECRET_JSON=$(aws secretsmanager get-secret-value \
            --secret-id "${{ env.SECRET_NAME }}" \
            --query "SecretString" \
            --output text)

          echo "$SECRET_JSON" | jq -r '
            to_entries[]
            | select(.value | type == "string")
            | select(.value | length > 8)  # Skip short/common values
            | "::add-mask::" + .value
          '
          echo "$SECRET_JSON" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> .env

      - uses: livecycle/preevy-up-action@v2.4.0
        id: preevy_up
        with:
          install: gh-release
          profile-url: "${{ env.PREEVY_PROFILE_URL }}"
          node-cache: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
          BUILDX_BAKE_ENTITLEMENTS_FS: 0

      - name: Get preview environment URL
        id: get-url
        run: |
          touch .env
          PREVIEW_URL=$(npx preevy urls --json --wait --profile "$PREEVY_PROFILE_URL" | jq -r '.[0].url')
          echo "✅ Using preview URL: $PREVIEW_URL"
          echo "preview_url=$PREVIEW_URL" >> "$GITHUB_OUTPUT"

      - name: Run health check
        id: check
        run: |
          URL="${{ steps.get-url.outputs.preview_url }}"

          for i in {1..10}; do
            STATUS=$(curl -L -s -o /dev/null -w "%{http_code}" "$URL")
            echo "Attempt $i: HTTP $STATUS"

            if [[ "$STATUS" -ge 200 && "$STATUS" -lt 400 ]]; then
              echo "✅ Health check passed"
              echo "status=$STATUS" >> "$GITHUB_OUTPUT"
              exit 0
            fi
            sleep 6
          done

          echo "❌ Health check failed after retries"
          exit 1

  e2e-test:
    needs: deploy
    uses: trade-tariff/trade-tariff-tools/.github/workflows/e2e-tests.yml@main
    with:
      test-environment: staging
      base-url: ${{ needs.deploy.outputs.preview_url }}
      skip-admin: true
      skip-api: true
      skip-passwordless: true
    secrets:
      basic_password: ${{ secrets.BASIC_PASSWORD }}

  notification:
      needs: [deploy, e2e-test]
      if: failure()
      runs-on: ubuntu-latest
      steps:
        - name: Notify Slack
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_USERNAME: GitHub Actions
            SLACK_CHANNEL: '#non-production-alerts'
            SLACK_TITLE: 'Preview Deploy or E2E Test Failed'
            SLACK_ICON_EMOJI: ':warning:'
            SLACK_MESSAGE: |
              *Repository:* ${{ github.repository }}
              *PR:* <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}>
              *Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>
              *Preview URL:* <${{ needs.deploy.outputs.preview_url }}|View Preview>
