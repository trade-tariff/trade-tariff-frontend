version: 2.1

filter-not-main: &filter-not-main
  filters:
    branches:
      ignore:
        - main
        - /^hotfix\/.+/

filter-main: &filter-main
  filters:
    branches:
      only:
        - main
        - /^hotfix\/.+/

filter-release: &filter-release
  filters:
    tags:
      only:
        - /^release-202[\d-]+/
    branches:
      ignore:
        - "/.*/"


orbs:
  aws-cli: circleci/aws-cli@2.0.3
  terraform: circleci/terraform@3.2.1
  ruby: circleci/ruby@2
  node: circleci/node@5
  browser-tools: circleci/browser-tools@1
  slack: circleci/slack@4.3.0
  tariff: trade-tariff/trade-tariff-ci-orb@0

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:1.5.5
    resource_class: small
    working_directory: "/tmp/terraform"
    environment:
      TF_INPUT: 0
      TF_IN_AUTOMATION: 1

jobs:
  write-docker-tag:
    parameters:
      environment:
        type: string
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run: echo "docker_tag = \"$(git rev-parse --short HEAD)\"" >> terraform/config_<< parameters.environment >>.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - terraform/

  fmt-validate-terraform:
    executor: terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - terraform/init:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
      - terraform/fmt:
          path: terraform/
      - terraform/validate:
          path: terraform/

  plan-terraform:
    executor: terraform
    environment:
      TF_CLI_ARGS: "-lock=false"
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - terraform/init:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
      - terraform/plan:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
          var_file: config_<< parameters.environment >>.tfvars
          lock-timeout: 5m

  apply-terraform:
    executor: terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - run:
          name: Add curl
          command: apk --no-cache add curl jq
      - attach_workspace:
          at: .
      - terraform/init:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
      - terraform/apply:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
          var_file: config_<< parameters.environment >>.tfvars
          lock-timeout: 5m
      - slack/notify:
          channel: deployments
          event: fail
          template: basic_fail_1
      - slack/notify:
          channel: deployments
          event: pass
          template: basic_success_1

  javascript-checks:
    docker:
      - image: cimg/node:16.13.2
    resource_class: small
    steps:
      - checkout
      - run: "yarn install"
      - run:
          name: "Lint changed files"
          command: |
            yarn run eslint $(git diff --name-only --diff-filter=ACM $(git merge-base main HEAD)..HEAD | egrep '\.js' | grep -v json)

  ruby-checks:
    executor: tariff/ruby
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Rubocop all files
          when: always
          command: |
            bundle exec rubocop
      - run:
          name: Inspecting with Brakeman
          when: always
          command: |
            bundle exec brakeman \
              -o /dev/stdout \
              -o test-results/brakeman/brakeman.junit \
              -o brakeman.html \
              --no-progress \
              --separate-models
      - store_test_results:
          path: test-results/brakeman/
      - store_artifacts:
          path: brakeman.html

  jest-tests:
    docker:
      - image: cimg/node:16.10.0
        environment:
          BUNDLE_JOBS: "3"
          BUNDLE_RETRY: "3"
          RAILS_ENV: test
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn run test
          name: Run YARN tests

  test:
    parallelism: 4
    docker:
      - image: cimg/ruby:3.2.2-node
        environment:
          BUNDLE_JOBS: "3"
          BUNDLE_RETRY: "3"
          RAILS_ENV: test
          NODE_OPTIONS: --openssl-legacy-provider
    resource_class: medium
    steps:
      - checkout
      - run: sudo apt-get update
      - browser-tools/install-chrome:
          chrome-version: 114.0.5735.90 # TODO: remove -> https://github.com/CircleCI-Public/browser-tools-orb/issues/75
      - browser-tools/install-chromedriver
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - ruby/rspec-test
      - store_artifacts:
          path: coverage
      - slack/notify:
          channel: deployments
          event: fail
          template: basic_fail_1

  notify-production-deployment:
    docker:
      - image: cimg/ruby:3.2.2
    steps:
      - tariff/notify-production-release:
          app-name: Frontend
          slack-channel: trade_tariff
          release-tag: $CIRCLE_TAG

workflows:
  version: 2

  deploy-to-development:
    jobs:
      - ruby-checks:
          context: trade-tariff
          <<: *filter-not-main

      - javascript-checks:
          context: trade-tariff
          <<: *filter-not-main

      - write-docker-tag:
          name: write-docker-tag-dev
          environment: development
          <<: *filter-not-main
          requires:
            - ruby-checks
            - javascript-checks

      - jest-tests:
          context: trade-tariff
          <<: *filter-not-main
          requires:
            - ruby-checks
            - javascript-checks

      - test:
          context: trade-tariff-notifications
          <<: *filter-not-main
          requires:
            - ruby-checks
            - javascript-checks

      - fmt-validate-terraform:
          name: fmt-terraform-dev
          context: trade-tariff-terraform-aws-development
          environment: development
          <<: *filter-not-main

      - plan-terraform:
          name: plan-terraform-dev
          context: trade-tariff-terraform-aws-development
          environment: development
          requires:
            - write-docker-tag-dev
            - fmt-terraform-dev
          <<: *filter-not-main

      - tariff/build-and-push:
          name: build-and-push-dev
          context: trade-tariff-terraform-aws-development
          environment: development
          image_name: tariff-frontend
          ssm_parameter: "/development/FRONTEND_ECR_URL"
          <<: *filter-not-main

      - confirm-deploy-for-qa?:
          type: approval
          requires:
            - jest-tests
            - test
            - plan-terraform-dev
            - build-and-push-dev
          <<: *filter-not-main

      - apply-terraform:
          name: apply-terraform-dev
          context: trade-tariff-terraform-aws-development
          environment: development
          requires:
            - confirm-deploy-for-qa?
          <<: *filter-not-main

      - tariff/smoketests:
          name: smoketest-dev
          context: trade-tariff-testing
          url: https://dev.trade-tariff.service.gov.uk
          yarn_run: dev-tariff-frontend-smoketests
          requires:
            - apply-terraform-dev
          <<: *filter-not-main

  deploy-to-staging:
    jobs:
      - write-docker-tag:
          name: write-docker-tag-staging
          environment: staging

      - plan-terraform:
          name: plan-terraform-staging
          context: trade-tariff-terraform-aws-staging
          environment: staging
          requires:
            - write-docker-tag-staging
          <<: *filter-not-main

      - tariff/build-and-push:
          name: build-and-push-live
          context: trade-tariff-terraform-aws-staging
          environment: staging
          image_name: tariff-frontend
          ssm_parameter: "/staging/FRONTEND_ECR_URL"
          <<: *filter-main

      - apply-terraform:
          name: apply-terraform-staging
          context: trade-tariff-terraform-aws-staging
          environment: staging
          requires:
            - write-docker-tag-staging
            - plan-terraform-staging
            - build-and-push-live
          <<: *filter-main

      - tariff/smoketests:
          name: smoketest-staging
          context: trade-tariff-testing
          url: https://staging.trade-tariff.service.gov.uk
          yarn_run: staging-tariff-frontend-smoketests
          requires:
            - apply-terraform-staging
          <<: *filter-main

  deploy-to-production:
    jobs:
      - write-docker-tag:
          name: write-docker-tag-prod
          environment: production

      - plan-terraform:
          name: plan-terraform-prod
          context: trade-tariff-terraform-aws-production
          environment: production
          requires:
            - write-docker-tag-prod
          <<: *filter-not-main

      - promote-to-production?:
          type: approval
          <<: *filter-main

      - tariff/create-production-release:
          name: "create-production-release"
          context: trade-tariff-releases
          image-name: tariff-frontend-production
          requires:
            - promote-to-production?
          <<: *filter-main

      - write-docker-tag:
          name: write-docker-tag-prod-release
          environment: production
          <<: *filter-release

      - apply-terraform:
          name: apply-terraform-prod
          context: trade-tariff-terraform-aws-production
          environment: production
          requires:
            - write-docker-tag-prod-release
          <<: *filter-release

      - notify-production-deployment:
          context: trade-tariff-releases
          requires:
            - apply-terraform-prod
          <<: *filter-release
